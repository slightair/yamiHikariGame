# encoding: utf-8

require 'yaml'
require 'active_record'
require 'digest/sha1'
require 'plist'
require 'pp'

SALT = 'tikuwa'

RESOURCES_DIR = '../Resources'

task :default => "settings:initDatabase"

namespace "settings" do
  INIT_DB_FILENAME = 'init.db'
  ACHIEVEMENTS_FILENAME = 'achievements.plist'

  desc "generate #{INIT_DB_FILENAME}"
  task :initDatabase do
    path = File.join(RESOURCES_DIR, INIT_DB_FILENAME)

    File.delete(path) if File.exist?(path)
    ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: path)
    CreateTable.new.up

    YAML.load_file('dropItems.yml').each do |item|
      str_drop_rate = "%.5f" % item["drop_rate"]
      count = (item["name"] == "クレジット" ? 1 : 0)
      byte_data = %w(name desc image stamina score score_threshold).map{|k|item[k]}.join(':') + ":#{str_drop_rate}" + ":#{count}:#{SALT}"
      Item.create(item.merge(count: count, checksum: Digest::SHA1.hexdigest(byte_data)[0...8]))
    end

    pp Item.all
  end

  desc "generate #{ACHIEVEMENTS_FILENAME}"
  task :achievements do
    path = File.join(RESOURCES_DIR, ACHIEVEMENTS_FILENAME)

    File.delete(path) if File.exist?(path)
    File.open(path, "w") do |file|
      file << YAML.load_file('achievements.yml').to_plist
    end
  end
end

class CreateTable < ActiveRecord::Migration
  def up
    create_table :Item, primary_key: :hiberlite_id do |t|
      t.string  :name
      t.string  :desc
      t.string  :image
      t.integer :stamina
      t.integer :score
      t.integer :score_threshold
      t.float   :drop_rate
      t.integer :count
      t.string  :checksum
    end
  end
end

class Item < ActiveRecord::Base
  self.primary_key = :hiberlite_id
  self.table_name = :Item
end